<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>GRIM</title>
    <link>https://wtgrim.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Wasn&#39;t looking for someone until you.</description>
    <pubDate>Thu, 21 Dec 2017 05:02:38 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>致敬，一个时代！</title>
      <link>https://wtgrim.github.io/2017/12/20/%E8%87%B4%E6%95%AC%EF%BC%8C%E4%B8%80%E4%B8%AA%E6%97%B6%E4%BB%A3%EF%BC%81/</link>
      <guid>https://wtgrim.github.io/2017/12/20/%E8%87%B4%E6%95%AC%EF%BC%8C%E4%B8%80%E4%B8%AA%E6%97%B6%E4%BB%A3%EF%BC%81/</guid>
      <pubDate>Wed, 20 Dec 2017 10:13:21 GMT</pubDate>
      <description>
      
        &lt;h5 id=&quot;初中时代&quot;&gt;&lt;a href=&quot;#初中时代&quot; class=&quot;headerlink&quot; title=&quot;初中时代&quot;&gt;&lt;/a&gt;初中时代&lt;/h5&gt;&lt;h5 id=&quot;曾经幼稚地学习着他的动作&quot;&gt;&lt;a href=&quot;#曾经幼稚地学习着他的动作&quot; class=&quot;headerlink&quot; title=&quot;曾经幼稚地学习着他的动作&quot;&gt;&lt;/a&gt;曾经幼稚地学习着他的动作&lt;/h5&gt;&lt;h5 id=&quot;以及一份对篮球的偏执热爱&quot;&gt;&lt;a href=&quot;#以及一份对篮球的偏执热爱&quot; class=&quot;headerlink&quot; title=&quot;以及一份对篮球的偏执热爱&quot;&gt;&lt;/a&gt;以及一份对篮球的偏执热爱&lt;/h5&gt;&lt;h5 id=&quot;青涩地暗恋着隔壁班的那个女孩&quot;&gt;&lt;a href=&quot;#青涩地暗恋着隔壁班的那个女孩&quot; class=&quot;headerlink&quot; title=&quot;青涩地暗恋着隔壁班的那个女孩&quot;&gt;&lt;/a&gt;青涩地暗恋着隔壁班的那个女孩&lt;/h5&gt;&lt;h5 id=&quot;渐渐已成过往&quot;&gt;&lt;a href=&quot;#渐渐已成过往&quot; class=&quot;headerlink&quot; title=&quot;渐渐已成过往&quot;&gt;&lt;/a&gt;渐渐已成过往&lt;/h5&gt;&lt;h5 id=&quot;致敬，-一个时代。&quot;&gt;&lt;a href=&quot;#致敬，-一个时代。&quot; class=&quot;headerlink&quot; title=&quot;致敬， 一个时代。&quot;&gt;&lt;/a&gt;致敬， 一个时代。&lt;/h5&gt;&lt;h5 id=&quot;致敬，曾经的青春。&quot;&gt;&lt;a href=&quot;#致敬，曾经的青春。&quot; class=&quot;headerlink&quot; title=&quot;致敬，曾经的青春。&quot;&gt;&lt;/a&gt;致敬，曾经的青春。&lt;/h5&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h5 id="初中时代"><a href="#初中时代" class="headerlink" title="初中时代"></a>初中时代</h5><h5 id="曾经幼稚地学习着他的动作"><a href="#曾经幼稚地学习着他的动作" class="headerlink" title="曾经幼稚地学习着他的动作"></a>曾经幼稚地学习着他的动作</h5><h5 id="以及一份对篮球的偏执热爱"><a href="#以及一份对篮球的偏执热爱" class="headerlink" title="以及一份对篮球的偏执热爱"></a>以及一份对篮球的偏执热爱</h5><h5 id="青涩地暗恋着隔壁班的那个女孩"><a href="#青涩地暗恋着隔壁班的那个女孩" class="headerlink" title="青涩地暗恋着隔壁班的那个女孩"></a>青涩地暗恋着隔壁班的那个女孩</h5><h5 id="渐渐已成过往"><a href="#渐渐已成过往" class="headerlink" title="渐渐已成过往"></a>渐渐已成过往</h5><h5 id="致敬，-一个时代。"><a href="#致敬，-一个时代。" class="headerlink" title="致敬， 一个时代。"></a>致敬， 一个时代。</h5><h5 id="致敬，曾经的青春。"><a href="#致敬，曾经的青春。" class="headerlink" title="致敬，曾经的青春。"></a>致敬，曾经的青春。</h5><a id="more"></a><video src="https://vd3.bdstatic.com//mda-hmjcb522vhq06stn//sc//mda-hmjcb522vhq06stn.mp4?auth_key=1513763151-0-0-e99275a926646031fdbbee30ec210895&bcevod_channel=searchbox_feed&pd=bjh&abtest=all" type="video/mp4" controls="controls" width="100%" height="100%"></video>]]></content:encoded>
      
      <comments>https://wtgrim.github.io/2017/12/20/%E8%87%B4%E6%95%AC%EF%BC%8C%E4%B8%80%E4%B8%AA%E6%97%B6%E4%BB%A3%EF%BC%81/#disqus_thread</comments>
    </item>
    
    <item>
      <title>重拾React Native之旅</title>
      <link>https://wtgrim.github.io/2017/08/04/ReactNative%E4%B8%80%E8%B7%AF%E8%B8%A9%E5%9D%91%E4%B9%8B%E6%97%85/</link>
      <guid>https://wtgrim.github.io/2017/08/04/ReactNative%E4%B8%80%E8%B7%AF%E8%B8%A9%E5%9D%91%E4%B9%8B%E6%97%85/</guid>
      <pubDate>Fri, 04 Aug 2017 01:32:54 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;React Native让开发者使用JavaScript和React编写应用，利用相同的核心代码就可以创建基于Web、iOS和Android平台的原生应用。Facebook在2015.3.26 F8大会上开源了React Native，实现了Web和iOS平台，并且在2015.9.15把JavaScript技术应用到了Android平台上，自此React Native已经支持当前主流平台。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/2017/08/04/ReactNative一路踩坑之旅/reactNative发布会.png&quot; alt=&quot;reactNative发布会&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;关于React-Native环境配置&quot;&gt;&lt;a href=&quot;#关于React-Native环境配置&quot; class=&quot;headerlink&quot; title=&quot;关于React Native环境配置&quot;&gt;&lt;/a&gt;关于React Native环境配置&lt;/h2&gt;&lt;p&gt;在这里，我们就不介绍有关React Native环境配置了，可以去&lt;a href=&quot;https://facebook.github.io/react-native/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;React Native官网&lt;/a&gt;得到相应的帮助，或者国内关于&lt;a href=&quot;http://reactnative.cn/docs/0.50/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;React Native中文网&lt;/a&gt;查看相关内容，有MacOS、Linux、Windows对应iOS和Android平台的相关配置，相信这些完全能满足你的需求。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>React Native让开发者使用JavaScript和React编写应用，利用相同的核心代码就可以创建基于Web、iOS和Android平台的原生应用。Facebook在2015.3.26 F8大会上开源了React Native，实现了Web和iOS平台，并且在2015.9.15把JavaScript技术应用到了Android平台上，自此React Native已经支持当前主流平台。</p></blockquote><p><img src="/2017/08/04/ReactNative一路踩坑之旅/reactNative发布会.png" alt="reactNative发布会"></p><h2 id="关于React-Native环境配置"><a href="#关于React-Native环境配置" class="headerlink" title="关于React Native环境配置"></a>关于React Native环境配置</h2><p>在这里，我们就不介绍有关React Native环境配置了，可以去<a href="https://facebook.github.io/react-native/" target="_blank" rel="noopener">React Native官网</a>得到相应的帮助，或者国内关于<a href="http://reactnative.cn/docs/0.50/getting-started.html" target="_blank" rel="noopener">React Native中文网</a>查看相关内容，有MacOS、Linux、Windows对应iOS和Android平台的相关配置，相信这些完全能满足你的需求。</p><a id="more"></a><p>PS：<em>init命令默认会创建最新的版本，而目前最新的0.45及以上版本需要下载boost库编译。此库体积庞大，在国内即便翻墙也很难下载成功，导致很多人<strong>无法正常运行iOS项目</strong>，中文网在论坛中提供了这些库的<a href="http://bbs.reactnative.cn/topic/4301/" target="_blank" rel="noopener">国内下载链接</a>。如果你嫌麻烦，又没有对新版本的需求，那么可以暂时创建<code>0.44.3</code>的版本。</em></p><blockquote><p>提示：你可以使用<code>--version</code>参数（注意是<code>两</code>个杠）创建指定版本的项目。例如<code>react-native init MyApp --version 0.44.3</code>。注意版本号必须精确到两个小数点。</p></blockquote><p>创建个人项目完成后，可以使用命令号工具执行<code>react-native run-ios</code>或者<code>react-native run-androi</code>运行项目，这里就不再赘述了。</p><h2 id="项目实践"><a href="#项目实践" class="headerlink" title="项目实践"></a>项目实践</h2><p>之前在网上看到有人用React Native仿写了美团App首页，在自己的尝试后也写了一个相应的React Native项目。那个小项目算是我初识React Native。惊叹于React Native的”Learn once, Write anywhere”的同时，也发现里面的东西挺多的，需要一定的前端基础，例如JSX语法、CSS-layout、ES6或ES5编程语言、flexbox布局等等。</p><p>现在因为自己未来的一些个人打算，重拾React Native，希望能够在里面更深层次的探索，同时结合node.js后端的知识，重新写一个项目，从而也提高一下自己的技术栈和技术沉淀。</p><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><h4 id="link-react-native-vector-icons-库报错"><a href="#link-react-native-vector-icons-库报错" class="headerlink" title="link  react-native-vector-icons 库报错"></a>link  react-native-vector-icons 库报错</h4><p>ICONS是可以直接使用图片名, 就能加载图片的三方,使用很方便, 你不需要在工程文件夹里塞各种图片, 节省很多空间。但是在加入时遇到第一个坑，安装react-native-vector-icons和rnpm完成后，将react-native-vector-icons链接到项目，使用rnpm link react-native-vector-icons报错，iOS链接失败。</p><p><img src="/2017/08/04/ReactNative一路踩坑之旅/link报错.png" alt="link报错"></p><p>后面没办法，后面找到解决办法就是使用react-native link简单粗暴地解决。</p><p><img src="/2017/08/04/ReactNative一路踩坑之旅/link解决.png" alt="link解决"></p><p>不想写了 待更新！😂</p>]]></content:encoded>
      
      
    </item>
    
    <item>
      <title>Hexo+Gitpage+NexT全日志</title>
      <link>https://wtgrim.github.io/2017/01/29/Hexo-Gitpage-nexT%E5%85%A8%E6%97%A5%E5%BF%97/</link>
      <guid>https://wtgrim.github.io/2017/01/29/Hexo-Gitpage-nexT%E5%85%A8%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Sun, 29 Jan 2017 06:02:52 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;一直想搭一个自己的Blog，但是就这样拖到了现在，我能说一句是没(tai)时(lan)间(la)吗？断断续续掰呲这个博客有一小段时间了，想起来就弄一下，写这篇日志算是一个记录吧。&lt;/p&gt;
&lt;p&gt;如果你也正在打算做一个自己的博客，碰巧进来看到的话，希望对你有帮助。&lt;/p&gt;
&lt;p&gt;现在个人博客网站很多采用Hexo + Gitpage + NexT 或者 Jekyll搭建静态网页，然后部署到自己的域名网站上，还有的采用WordPress。我个人比较喜欢现在博客简洁的风格，所以我的博客是采用Hexo来搭建的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;yaoayaoa.cn&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;关于Hexo部分&quot;&gt;&lt;a href=&quot;#关于Hexo部分&quot; class=&quot;headerlink&quot; title=&quot;关于Hexo部分&quot;&gt;&lt;/a&gt;关于Hexo部分&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2017/01/29/Hexo-Gitpage-nexT全日志/Hexo图片来源于网络.png&quot; alt=&quot;Hexo图片来源于网络&quot;&gt;&lt;/p&gt;
&lt;p&gt;对于工具环境，我用的MacBook Pro，但是命令行的差别不大，所以使用Windows来搭建也不必担心。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>一直想搭一个自己的Blog，但是就这样拖到了现在，我能说一句是没(tai)时(lan)间(la)吗？断断续续掰呲这个博客有一小段时间了，想起来就弄一下，写这篇日志算是一个记录吧。</p><p>如果你也正在打算做一个自己的博客，碰巧进来看到的话，希望对你有帮助。</p><p>现在个人博客网站很多采用Hexo + Gitpage + NexT 或者 Jekyll搭建静态网页，然后部署到自己的域名网站上，还有的采用WordPress。我个人比较喜欢现在博客简洁的风格，所以我的博客是采用Hexo来搭建的。</p></blockquote><p><a href="yaoayaoa.cn">原文地址</a></p><h2 id="关于Hexo部分"><a href="#关于Hexo部分" class="headerlink" title="关于Hexo部分"></a>关于Hexo部分</h2><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/Hexo图片来源于网络.png" alt="Hexo图片来源于网络"></p><p>对于工具环境，我用的MacBook Pro，但是命令行的差别不大，所以使用Windows来搭建也不必担心。</p><a id="more"></a><h3 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h3><p>我们需要先将博客部署到GitHub上，所以需要一个GitHub账号，如果已经有请忽略，没有的话去<a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a>注册一个即可。</p><p>Github账号解决后，创建一个仓库。</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/创建仓库.png" alt="创建仓库"></p><h3 id="填写仓库名称"><a href="#填写仓库名称" class="headerlink" title="填写仓库名称"></a>填写仓库名称</h3><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/图片来自GitHub.png" alt="图片来自GitHub"></p><p>填写规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Github昵称.github.io</span><br></pre></td></tr></table></figure><p>然后点击创建即可。</p><h3 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h3><p>在终端中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>然后一路<code>Enter</code>就好，待秘钥生成完毕，会得到两个文件<strong>id_rsa</strong>和<strong>id_rsa.pub</strong>。用带格式的记事本或者编辑器打开id_rsa.pub，Ctrl + a复制里面的所有内容，然后进入<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a>：</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/添加秘钥.png" alt="添加秘钥"></p><p>将复制的内容粘贴到Key的输入框，Title里面的内容可随意填写，点击<code>Add SSH key</code>按钮即可。</p><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>这里推荐Homebrew来安装node.js。</p><h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><p><a href="http://brew.sh/" target="_blank" rel="noopener">Homebrew</a>, Mac系统的包管理器，用于安装NodeJS和一些其他必需的工具软件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><p>译注：在Max OS X 10.11（El Capitan)版本中，homebrew在安装软件时可能会碰到<code>/usr/local</code>目录不可写的权限问题。可以使用下面的命令修复：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R `whoami` /usr/local</span><br></pre></td></tr></table></figure><h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><p>使用Homebrew来安装<a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js</a>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><p>安装完node后建议设置npm镜像以加速后面的过程（或使用科学上网工具）。注意：不要使用cnpm！cnpm安装的模块路径比较奇怪，packager不能正常识别！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org --global</span><br><span class="line">npm config set disturl https://npm.taobao.org/dist --global</span><br></pre></td></tr></table></figure><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>在你电脑上方便放置Blog文件夹的地方，创建一个Blog文件夹(名字你随意啦，最好英文吧，职业病)。</p><p>然后在终端中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd 到你创建的blog文件夹(可以将文件夹拖到此处就会自动生成路径)</span><br></pre></td></tr></table></figure><p>下载安装hexo执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h3><p>在当前路径下直接输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init </span><br><span class="line">// node.js的命令，根据博客既定的dependencies配置安装所有的依赖包</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>执行完命令后，可以在创建的blog文件夹下看到如下文件</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/博客文件夹.png" alt="博客文件夹"></p><h3 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h3><p>在上面的文件夹下可以看到一个_config.yml的文件，它就是站点配置文件，用编辑器(如果有Xcode推荐Xcode)打开，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: # The title of your website</span><br><span class="line">subtitle: # The subtitle of your website</span><br><span class="line">description: # The description of your website</span><br><span class="line">author: # Your name</span><br><span class="line">language: # The language of your website</span><br><span class="line">timezone: </span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://yoursite.com/child</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: landscape</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type:</span><br></pre></td></tr></table></figure><p>不要看着这么多，其实用我们配置的地方比较少。（<strong>所有输入的配置，需要在冒号后面留一个空格，切记</strong>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: GRIM</span><br><span class="line">subtitle: just do it</span><br><span class="line">description: Wasn&apos;t looking for someone until you.</span><br><span class="line">author: GRIM</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone: Asia/Shanghai</span><br><span class="line">avatar: /images/blogAvatar.png</span><br></pre></td></tr></table></figure><p>关于头像avatar，有两种方式，一种是网络图片，在后面放置头像的URL即可，另外一种是本地图片，将图片放置到next主题文件夹themes/next/source/images，然后如上图输入绝对路径即可，关于next主题现在我们还没到那一步，后面我们会讲到，所以现在放置网络图片的URL即可。</p><h3 id="配置个人域名"><a href="#配置个人域名" class="headerlink" title="配置个人域名"></a>配置个人域名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url: https://github昵称.github.io</span><br></pre></td></tr></table></figure><p>ps:如果后面购买了域名网站，将这里改为你的个人域名网站即可。</p><p>对于root（根目录）、permalink（永久链接）、permalink_defaults（默认永久链接）等其他信息保持默认。</p><h3 id="配置部署deploy"><a href="#配置部署deploy" class="headerlink" title="配置部署deploy"></a>配置部署deploy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: git</span><br><span class="line">repo: https://github.com/WTGrim/WTGrim.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>其中repo，是放置Blog的仓库地址，如下可得复制到这里即可。</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/复制仓库git地址.png" alt="复制仓库git地址"></p><h3 id="发表文章"><a href="#发表文章" class="headerlink" title="发表文章"></a>发表文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章标题&quot;</span><br></pre></td></tr></table></figure><p>然后可以在本地博客文件夹<code>source</code>/<code>_post</code>文件夹下看到新建的markdown文件。</p><p>用支持markdown语法的编辑器编辑这边文章</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/编辑文章.png" alt="编辑文章"></p><p>编辑保存后，接下来进行本地发布，终端进到博客文件，执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>完成后可以看到提示在<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 打开浏览，打开浏览器输入网址即可看到效果，这里我就不截图了（因为懒），大致是一个发光的地球哇，上面有你的昵称。</p><p>这个时候，这个页面只能在本机能看到，怎么让别人也能访问我们的博客呢？</p><p>那么我们需要将博客部署到Github上，只需要在当前目录下，终端中执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>然后在浏览器中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你的昵称.github.io</span><br></pre></td></tr></table></figure><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>Ps:下班啦 下次更新!</p><p>更新！</p><p>由于现在的界面可能觉得，嗯界面不太好看，那么就需要更换主题，我们用NexT来更换主题。</p><h3 id="下载NexT主题"><a href="#下载NexT主题" class="headerlink" title="下载NexT主题"></a>下载NexT主题</h3><p>在终端中，cd到博客的根目录下，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>我们约定，将前者称为 <strong>站点配置文件</strong>，后者称为 <strong>主题配置文件</strong></p><h3 id="启用-NexT-主题"><a href="#启用-NexT-主题" class="headerlink" title="启用 NexT 主题"></a>启用 NexT 主题</h3><p>打开 <strong>站点配置</strong>文件 ，找到 theme 字段，并将其值更改为 next 。<br>NexT 主题安装完成。下一步我们将验证主题是否正确启用，在切换主题之后、验证之前，我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。</p><p>执行部署命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>注意：由于部署需要一定时间，所以每次部署等一小段时间才能看到效果（下同）。</p><p>在浏览器中输入<code>你的昵称.github.io</code>即可观察到muse主题效果</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/Muse主题界面.png" alt="Muse主题界面"></p><p>当然，也可切换主题，有四种主题可选</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/主题类别.png" alt="主题类别"></p><h3 id="添加背景动画"><a href="#添加背景动画" class="headerlink" title="添加背景动画"></a>添加背景动画</h3><ol><li><p>将 <a href="https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/particle.js" target="_blank" rel="noopener">particle.js</a> 文件添加到 \themes\next\source\js\src 文件目录下。</p></li><li><p>找到 <code>\themes\next\layout\_layout.swing</code> 文件，<strong>在文件的后面，标签之前 </strong>添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 背景动画 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/particle.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><p>注意：这个背景动画占用资源挺高的，每次打开博客，我的机器风扇就转的呼呼的，看自己需要添加吧。</p><h2 id="同步Hexo搭建的博客"><a href="#同步Hexo搭建的博客" class="headerlink" title="同步Hexo搭建的博客"></a>同步Hexo搭建的博客</h2><p>这点算是比较重要的，因为初次搭建好Blog，Hexo相关的配置都只存在于你的这台电脑上，如果你换电脑了或者搭建用的公司的电脑，那么回家你在自己的电脑上就拿不到之前已经配置好的Hexo，从而不能继续进行相关的配置。</p><p>那么接下来要做的就是将我们已配置好的Hexo同步到之前我们创建的Github的仓库的分支上。</p><p>终端中cd到博客的根目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 博客路径</span><br></pre></td></tr></table></figure><p>这样就讲Hexo相关配置上传到了仓库的分支上，那么在另外一台设备上可以这样做</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 克隆文件到本地</span><br><span class="line">git clone -b 分支名 https://github.com/用户名/仓库名.git</span><br></pre></td></tr></table></figure><p>将Hexo配置下载下来，继续相关的配置或者写文章，完成后也要提交你的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 添加源文件</span><br><span class="line">git add .</span><br><span class="line">// git提交</span><br><span class="line">git commit -m &quot;&quot;</span><br><span class="line">// 先拉原来Github分支上的源文件到本地，进行合并</span><br><span class="line">git pull origin 分支名</span><br><span class="line">// 比较解决前后版本冲突后，push源文件到Github的分支</span><br><span class="line">git push origin 分支名</span><br></pre></td></tr></table></figure><p>这样就实现了自己Blog的Hexo同步。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 初始化仓库</span><br><span class="line">git init</span><br><span class="line">// 添加仓库地址</span><br><span class="line">git remote add origin https://github.com/用户名/仓库名.git</span><br><span class="line">// 新建分支并切换到新建的分支</span><br><span class="line">git checkout -b 分支名</span><br><span class="line">// 添加所有本地文件到git</span><br><span class="line">git add .</span><br><span class="line">// git提交描述</span><br><span class="line">git commit -m &quot;&quot;</span><br><span class="line">// 推送到hexo分支</span><br><span class="line">git push origin 分支名</span><br></pre></td></tr></table></figure><h2 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h2><p>如果觉得现在的<code>你的昵称.github.io</code>并不是很炫酷，那么你可以通过购买域名，将自己的Blog部署上去。</p><p>可以在阿里云上购买域名<a href="https://wanwang.aliyun.com/?spm=5176.8142029.735711.56.3836dbccCvcics" target="_blank" rel="noopener">阿里云域名页面</a>，推荐.com .cn的域名，价格相应贵一点，可是看起来顺眼啊，什么.xyz</p><p>.top总感觉怪怪的，看个人喜好吧。</p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>购买域名后，我们登录进入阿里云官网的<a href="https://home.console.aliyun.com/?spm=5176.8142029.388261.21.ZtVm97" target="_blank" rel="noopener">控制台</a>，在域名列表中可查看自己购买的域名</p><p>点击列表中对应的域名所在列的<strong>解析</strong>，进入解析界面</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/域名解析设置.png" alt="域名解析设置"></p><p>点击<strong>添加解析</strong>按钮，三个输入格输入：<strong>CNAME</strong>、<strong>@</strong>、<strong>Github博客域名</strong>。选择保存完成个人域名向个人博客的映射。添加解析后，在浏览器输入我们新注册的域名</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/域名解析.png" alt="域名解析"></p><p>可是出现了<strong>404</strong>错误，说明域名已经成功映射到了Github网站，但是它找不到博客的位置，所以我们需要实现个人博客向个人域名的映射，进入Github博客的仓库</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/域名解析仓库配置.png" alt="域名解析仓库配置"></p><p>点击上图上方偏右的<strong>Create new file</strong>按钮，创建一个文件：</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/域名解析输入域名.png" alt="域名解析输入域名"></p><p>文件名为<strong>CNAME</strong>(注意：没有扩展名)，文件内容为<strong>个人域名</strong>(注意：没有<strong>http://</strong>，没有<strong>www</strong>)，然后选择下方的<strong>Commit new file</strong>按钮。然后在浏览器端重新输入我们的域名，可以看到域名绑定成功。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>当在本地使用<code>hexo d</code>命令再一次部署博客时，会发现博客网页的<strong>css样式丢失</strong>或是<strong>404</strong>错误，这是因为本地的博客工程里面还没有CNAME，当我们重新部署后，远程的博客工程会和本地保持同步，将CNAME文件删除，所以需要在本地添加CNAME文件。</p><p>这里需要注意的是：CNAME文件添加的目录是在根目录下的source文件夹，而不是.deploy_git文件夹，完成添加后重新部署，博客网站恢复正常。在Mac上创建的文本编辑默认是.rtf为扩展名的，还是在Windows上创建了一个.txt，然后输入域名保存后，将扩展名删掉完成的。</p><h2 id="添加分类、评论、打赏、RSS功能"><a href="#添加分类、评论、打赏、RSS功能" class="headerlink" title="添加分类、评论、打赏、RSS功能"></a>添加分类、评论、打赏、RSS功能</h2><p>进行到这里，现在的博客看起来还比较单一，需要我们自己往博客上添加我们想要的模块。</p><h3 id="添加分类模块"><a href="#添加分类模块" class="headerlink" title="添加分类模块"></a>添加分类模块</h3><p>例如，添加一个分类模块，在博客文件目录下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>执行命令完成后，会在themes/source下创建一个名为categories的文件夹，打开里面的index.md文件，</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/第一篇文章.png" alt="第一篇文章"></p><p>同理，你可以依照上述流程创建，tags（标签）和about（关于）的模块。</p><p>在<strong>主题文件</strong>下，设置menu和相应的图标，关于图标你可以使用<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">Font Awesome</a>，直接找到相应的名字就可以。</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/分类页面设置.png" alt="分类页面设置"></p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/分类图标设置.png" alt="分类图标设置"></p><p>重新就行部署，你可以发现分类页面、图标相应的变化。</p><p>以此类推添加你想要的模块。注意，你可能需要到theme/next/languages中的zh-hans中去配置你需要的文字描述。</p><h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><p>其实现在最新版的NexT已经集成了很多第三方评论服务。继多说，网易云跟帖相继停止自己的服务外，现在算是挺难找到一个不需要VPN、UI又好看以及集成较多登录方式的评论了，个人觉得Github的Gitment算是比较好的选择，还有一个是来必力，但是需要翻墙，评论速度就不敢恭维了。</p><p>这里我提供NexT官方<a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="noopener">集成评论</a>的网址，集成也比较简单方便，支持DISQUS、来必力（都需要科学上网），按自己的喜好来吧。</p><p>主要说一下集成<strong>Gitment</strong>评论：</p><p>Gitment是使用的GitHub Issues作为评论系统，在接入Gitment前，需要获得GitHub的授权，获得相应的客户端id和客户端私钥，以备站点使用。</p><p><a href="http://colabug.com/goto/aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL2FwcGxpY2F0aW9ucy9uZXc=" target="_blank" rel="noopener">OAuth application注册接入</a></p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/Gitment授权.png" alt="Gitment授权"></p><p>从而获取到获取Client ID和Client Secret。然后打开<strong>主题配置</strong>文件，进行相应填写后，将enable修改为true，<img src="/2017/01/29/Hexo-Gitpage-nexT全日志/填写Gitment配置.png" alt="填写Gitment配置"></p><p>重写部署，就可以看到添加评论后的效果:</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/Gitment.png" alt="Gitment"></p><h3 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h3><p>打赏功能呢，是每个创作者创作动力，请暂且允许我这么说，但是基本不会有人打赏呐。但是可以作为一个技术功能来添加到自己的博客也未尝不可。</p><p>NexT支持微信和支付宝二维码打赏的功能，只需要将自己微信和支付宝收款的二维码的图保存下来就可以了（也可以设置对应的金额，就看你的人品会不会有人买单呐），具体操作这里就不做阐述了，实在有问题的话可以自行百度一下。</p><p>将保存下来的二维码进行相应命名后放到themes/next/source/images文件夹下，然后配置主题文件如下即可：</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/打赏配置.png" alt="打赏配置"></p><p>然后重新部署，等一小会儿到自己的博客文章底部可看到效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p><strong>安装 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 插件</strong></p><ul><li><p>RSS需要有一个Feed链接，而这个链接需要靠hexo-generator-feed插件来生成，所以第一步需要添加插件，在Hexo根目录执行安装指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></li><li><p><strong>配置feed信息</strong><br>在<strong>站点配置文件</strong>中追加如下图所示的信息：</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/RSS配置.png" alt="RSS配置"></p></li></ul><p>重新部署后可看到这样的效果:</p><p><img src="/2017/01/29/Hexo-Gitpage-nexT全日志/RSS.png" alt="RSS"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>到此，相信你已经搭建了一个自己简单的博客，后续空闲我会更新如何打造一个更加炫酷的博客，包括文章中引用图片的问题、添加进度条、添加音乐、添加阅读数据统计、添加宠物、文章中添加版权信息、打赏文字不闪动、添加热度、添加文章加密访问等等功能。</p><p>休息休息，祝玩得愉快！</p>]]></content:encoded>
      
      <comments>https://wtgrim.github.io/2017/01/29/Hexo-Gitpage-nexT%E5%85%A8%E6%97%A5%E5%BF%97/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
