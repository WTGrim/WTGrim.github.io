<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>GRIM</title>
    <link>http://wtgrim.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Wasn&#39;t looking for someone until you.</description>
    <pubDate>Sat, 25 Nov 2017 14:06:17 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>god</title>
      <link>http://wtgrim.github.io/2017/11/25/god/</link>
      <guid>http://wtgrim.github.io/2017/11/25/god/</guid>
      <pubDate>Sat, 25 Nov 2017 13:56:47 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;哦是 是是是是&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p>哦是 是是是是</p>]]></content:encoded>
      
      <comments>http://wtgrim.github.io/2017/11/25/god/#disqus_thread</comments>
    </item>
    
    <item>
      <title>first</title>
      <link>http://wtgrim.github.io/2017/11/24/hello-blog/</link>
      <guid>http://wtgrim.github.io/2017/11/24/hello-blog/</guid>
      <pubDate>Fri, 24 Nov 2017 12:45:13 GMT</pubDate>
      <description>
      
        
        
          &lt;pre&gt;&lt;code&gt;欢迎来到我的个人博客。
&lt;/code&gt;&lt;/pre&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<pre><code>欢迎来到我的个人博客。</code></pre>]]></content:encoded>
      
      <comments>http://wtgrim.github.io/2017/11/24/hello-blog/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Try</title>
      <link>http://wtgrim.github.io/2017/11/24/try/</link>
      <guid>http://wtgrim.github.io/2017/11/24/try/</guid>
      <pubDate>Fri, 24 Nov 2017 12:45:13 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt; 我真的不信&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p> 我真的不信</p>]]></content:encoded>
      
      <comments>http://wtgrim.github.io/2017/11/24/try/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://wtgrim.github.io/2017/11/24/hello-world/</link>
      <guid>http://wtgrim.github.io/2017/11/24/hello-world/</guid>
      <pubDate>Fri, 24 Nov 2017 03:30:35 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>http://wtgrim.github.io/2017/11/24/hello-world/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo+Gitpage+nexT建站全日志</title>
      <link>http://wtgrim.github.io/2017/01/15/Blog%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/</link>
      <guid>http://wtgrim.github.io/2017/01/15/Blog%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Sun, 15 Jan 2017 03:10:49 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;一直在想搭一个自己的Blog，但是就这样拖到了现在，我能说一句是没(tai)时(lan)间(la)吗？断断续续掰呲这个博客有
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>一直在想搭一个自己的Blog，但是就这样拖到了现在，我能说一句是没(tai)时(lan)间(la)吗？断断续续掰呲这个博客有一小段时间了，想起来就弄一下子，今天差不多算是能看了，后面还会加上一些功能，现在对过程做一些记录，如果对正想搭建自己博客的人有一些帮助的话，那么有幸能帮助到你。</p><p>现在很多个人博客网站采用Hexo + Gitpage + nexT 或者 Jekyll搭建静态网页，然后部署到自己的域名网站上，还有的采用WordPress。我个人比较喜欢现在博客简洁的风格，所以我的博客是采用Hexo来搭建的。</p><h3 id="关于Hexo部分"><a href="#关于Hexo部分" class="headerlink" title="关于Hexo部分"></a>关于Hexo部分</h3><p><img src="/Users/grim/Desktop/Hexo(图片来源于网络" alt="Hexo(图片来源于网络)">.png)</p><p>对于工具环境，我用的MacBook Pro，但是命令行的差别不大，所以使用Windows来搭建也不必担心。</p><h4 id="1-注册Github账号"><a href="#1-注册Github账号" class="headerlink" title="1.注册Github账号"></a>1.注册Github账号</h4><p>我们需要先将博客部署到GitHub上，所以需要一个GitHub账号，如果已经有请忽略，没有的话去<a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a>注册一个即可。</p><p>Github账号解决后，创建一个仓库。</p><p><img src="/Users/grim/Desktop/创建仓库.png" alt="创建仓库"></p><h4 id="2-填写仓库名称"><a href="#2-填写仓库名称" class="headerlink" title="2.填写仓库名称"></a>2.填写仓库名称</h4><p><img src="/Users/grim/Desktop/图片来自GitHub.png" alt="图片来自GitHub"></p><p>填写规则：</p><figure class="highlight plain"><figcaption><span>```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后点击创建即可。</span><br><span class="line"></span><br><span class="line">####  3.生成秘钥</span><br><span class="line"></span><br><span class="line">在终端中输入：</span><br></pre></td></tr></table></figure><p>ssh-keygen -t rsa -C “Github的注册邮箱地址”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后一路`Enter`就好，待秘钥生成完毕，会得到两个文件**id_rsa**和**id_rsa.pub**。用带格式的记事本或者编辑器打开id_rsa.pub，Ctrl + a复制里面的所有内容，然后进入&lt;https://github.com/settings/ssh&gt;：</span><br><span class="line"></span><br><span class="line">![添加秘钥](/Users/grim/Desktop/添加秘钥.png)</span><br><span class="line"></span><br><span class="line">将复制的内容粘贴到Key的输入框，Title里面的内容可随意填写，点击`Add SSH key`按钮即可。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 安装node.js</span><br><span class="line"></span><br><span class="line">这里推荐Homebrew来安装node.js。</span><br><span class="line"></span><br><span class="line">#### 1.Homebrew</span><br><span class="line"></span><br><span class="line">[Homebrew](http://brew.sh/), Mac系统的包管理器，用于安装NodeJS和一些其他必需的工具软件。</span><br></pre></td></tr></table></figure></p><p>/usr/bin/ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">译注：在Max OS X 10.11（El Capitan)版本中，homebrew在安装软件时可能会碰到`/usr/local`目录不可写的权限问题。可以使用下面的命令修复：</span><br></pre></td></tr></table></figure></p><p>sudo chown -R <code>whoami</code> /usr/local<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 2.Node</span><br><span class="line"></span><br><span class="line">使用Homebrew来安装[Node.js](https://nodejs.org/).</span><br></pre></td></tr></table></figure></p><p>brew install node<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">安装完node后建议设置npm镜像以加速后面的过程（或使用科学上网工具）。注意：不要使用cnpm！cnpm安装的模块路径比较奇怪，packager不能正常识别！</span><br></pre></td></tr></table></figure></p><p>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a> –global<br>npm config set disturl <a href="https://npm.taobao.org/dist" target="_blank" rel="noopener">https://npm.taobao.org/dist</a> –global<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 3.安装git</span><br></pre></td></tr></table></figure></p><p>npm install hexo-deployer-git –save<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 4.安装Hexo</span><br><span class="line"></span><br><span class="line">在你电脑上方便放置Blog文件夹的地方，创建一个Blog文件夹(名字你随意啦，最好英文吧，职业病)。</span><br><span class="line"></span><br><span class="line">然后在终端中</span><br></pre></td></tr></table></figure></p><p>$ cd 到你创建的blog文件夹(可以将文件夹拖到此处就会自动生成路径)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">下载安装hexo执行命令</span><br></pre></td></tr></table></figure></p><p>$ npm install -g hexo-cli<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 5.初始化博客</span><br><span class="line"></span><br><span class="line">在当前路径下直接输入</span><br></pre></td></tr></table></figure></p><p>$ hexo init<br>// node.js的命令，根据博客既定的dependencies配置安装所有的依赖包<br>$ npm install<br>```</p><p>执行完命令后，可以在创建的blog文件夹下看到如下文件</p>]]></content:encoded>
      
      <comments>http://wtgrim.github.io/2017/01/15/Blog%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
